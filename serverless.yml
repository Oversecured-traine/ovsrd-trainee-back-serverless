service: task-tracker

provider:
  name: aws
  runtime: nodejs18.x
  profile: cyberberry
  stage: dev
  region: us-east-1 
  enviroment:
    COLUMNS_TABLE_NAME: ${self.custom.columnsTableName}
    CARDS_TABLE_NAME: ${self.custom.cardsTableName}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "*"

plugins:
  - serverless-offline

custom: 
  columnsTableName: adavydova-columns
  cardsTableName: adavydova-cards

functions:
  # ColumnController methods
  createColumn:
    handler: src/columnController.createColumn
    events:
      - http:
          path: /columns
          method: POST

  getColumn:
    handler: src/columnController.getColumn
    events:
      - http:
          path: /columns/{columnId}
          method: GET

  updateColumn:
    handler: src/columnController.updateColumn
    events:
      - http:
          path: /columns/{columnId}
          method: PUT

  deleteColumn:
    handler: src/columnController.deleteColumn
    events:
      - http:
          path: /columns/{columnId}
          method: DELETE

  getColumns:
    handler: src/columnController.getColumns
    events:
      - http:
          path: /columns
          method: GET

  getSortedColumns:
    handler: src/columnController.getSortedColumns
    events:
      - http:
          path: /columns/sorted
          method: GET

  getMaxColumnIndex:
    handler: src/columnController.getMaxColumnIndex
    events:
      - http:
          path: /columns/maxIndex
          method: GET

  # CardController methods
  createCard:
    handler: src/cardController.createCard
    events:
      - http:
          path: /cards
          method: POST

  getCard:
    handler: src/cardController.getCard
    events:
      - http:
          path: /cards/{cardId}
          method: GET

  updateCard:
    handler: src/cardController.updateCard
    events:
      - http:
          path: /cards/{cardId}
          method: PUT

  deleteCard:
    handler: src/cardController.deleteCard
    events:
      - http:
          path: /cards/{cardId}
          method: DELETE

  getCards:
    handler: src/cardController.getCards
    events:
      - http:
          path: /cards
          method: GET

  getCardsByColumnID:
    handler: src/cardController.getCardsByColumnID
    events:
      - http:
          path: /columns/{columnId}/cards
          method: GET

  getSortedCards:
    handler: src/cardController.getSortedCards
    events:
      - http:
          path: /cards/sorted
          method: GET

  moveCard:
    handler: src/cardController.move
    events:
      - http:
          path: /cards/{cardId}/move
          method: POST

  getMaxCardIndex:
    handler: src/cardController.getMaxCardIndex
    events:
      - http:
          path: /columns/{columnId}/maxIndex
          method: GET

resources:
  Resources:
    ColumnsTable:
      Type: AWS::DynamoDB::Table
      Properties:
      TableName: ${self:custom.columnsTableName}
      AttributeDefinitions: 
        - AttributeName: columnID
          AttributeType: S
        - AttributeName: columnIndex
          AttributeType: N  
      KeySchema:
        - AttributeName: columnID
          KeyType: Hash
      GlobalSecondaryIndexes:
          - IndexName: columnsByIndex
            KeySchema:
              - AttributeName: columnIndex
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

    CardsTable:
      Type: AWS::DynamoDB::Table
      Properties:
      TableName: ${self:custom.cardsTableName}
      AttributeDefinitions: 
        - AttributeName: cardID
          AttributeType: S
        - AttributeName: columnID
          AttributeType: S
        - AttributeName: cardIndex
          AttributeType: N  
      KeySchema:
        - AttributeName: cardID
          KeyType: HASH
      GlobalSecondaryIndexes:
          - IndexName: cardsByColumnIdAndIndex
            KeySchema:
              - AttributeName: columnID
                KeyType: HASH
              - AttributeName: cardIndex
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

  