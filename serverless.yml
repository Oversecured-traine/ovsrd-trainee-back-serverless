service: task-tracker

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ${self:custom.region}
  environment:
    COLUMNS_TABLE_ARN: ${env:COLUMNS_TABLE_ARN}
    CARDS_TABLE_ARN: ${env:CARDS_TABLE_ARN}
    COLUMNS_TABLE_NAME: ${env:COLUMNS_TABLE_NAME}
    CARDS_TABLE_NAME: ${env:CARDS_TABLE_NAME}
    # DYNAMODB_ENDPOINT: http://localhost:8001

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource: 
          - ${self:provider.environment.COLUMNS_TABLE_ARN}
          - ${self:provider.environment.COLUMNS_TABLE_ARN}/*
          - ${self:provider.environment.CARDS_TABLE_ARN}
          - ${self:provider.environment.CARDS_TABLE_ARN}/*


plugins:
  - serverless-offline

custom: 
  region: eu-west-1
  allowedOrigins:
    - https://d1ys6ezlk3fk60.cloudfront.net
    - https://d3vsj6j2m25kwy.cloudfront.net
    - https://d1jl1mdpr1jnx3.cloudfront.net

functions:
  # ColumnController methods
  createColumn:
    handler: src/controller/ColumnController.createColumn
    # timeout: 15
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /create-column
          method: POST
          cors: 
            origins: ${self:custom.allowedOrigins}


  getColumn:
    handler: src/controller/ColumnController.getColumn
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /get-column/{columnID}
          method: GET
          cors: 
            origins: ${self:custom.allowedOrigins}

  updateColumn:
    handler: src/controller/ColumnController.updateColumn
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /update-columns/{columnID}
          method: PUT
          cors: 
            origins: ${self:custom.allowedOrigins}

  deleteColumn:
    handler: src/controller/ColumnController.deleteColumn
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /delete-columns/{columnID}
          method: DELETE
          cors: 
            origins: ${self:custom.allowedOrigins}

  getColumns:
    handler: src/controller/ColumnController.getColumns
    timeout: 15
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /columns
          method: GET
          cors: 
            origins: ${self:custom.allowedOrigins}

  getMaxColumnIndex:
    handler: src/controller/ColumnController.getMaxColumnIndex
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /columns/maxIndex
          method: GET
          cors: 
            origins: ${self:custom.allowedOrigins}

  # CardController methods
  createCard:
    handler: src/controller/CardController.createCard
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /create-card/{columnID}
          method: POST
          cors: 
            origins: ${self:custom.allowedOrigins}

  getCard:
    handler: src/controller/CardController.getCard
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /get-card/{cardID}
          method: GET
          cors: 
            origins: ${self:custom.allowedOrigins}

  updateCard:
    handler: src/controller/CardController.updateCard
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /update-card/{cardID}
          method: PUT
          cors: 
            origins: ${self:custom.allowedOrigins}

  deleteCard:
    handler: src/controller/CardController.deleteCard
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /delete-card/{cardID}
          method: DELETE
          cors: 
            origins: ${self:custom.allowedOrigins}

  getCards:
    handler: src/controller/CardController.getCards
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /cards
          method: GET
          cors: 
            origins: ${self:custom.allowedOrigins}

  getCardsByColumnID:
    handler: src/controller/CardController.getCardsByColumnID
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /columns/{columnID}/cards
          method: GET
          cors: 
            origins: ${self:custom.allowedOrigins}

  moveCard:
    handler: src/controller/CardController.move
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /cards/{cardID}/{columnID}/{prevCardIndex}/{nextCardIndex}/move
          method: POST
          cors: 
            origins: ${self:custom.allowedOrigins}

  getMaxCardIndex:
    handler: src/controller/CardController.getMaxCardIndex
    # environment:
    #   DYNAMODB_ENDPOINT: http://localhost:8001
    events:
      - http:
          path: /columns/{columnID}/maxIndex
          method: GET
          cors: 
            origins: ${self:custom.allowedOrigins}
